{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate'; // import axios from 'axios'\n\nVue.use(Vuex);\nvar state = {\n  blogs: [],\n  count: 1,\n  blog: {}\n};\nvar plugins = [createPersistedState()];\nvar mutations = {\n  PUBLISH_PAGE: function PUBLISH_PAGE(state, blog) {\n    state.blogs.push(blog);\n    state.count += 1;\n  },\n  DELETE_BLOG: function DELETE_BLOG(state, id) {\n    console.log('Inside mutation');\n    var blogs = state.blogs;\n    console.log(id);\n    blogs = blogs.filter(function (eachblog) {\n      return eachblog.id !== id;\n    });\n    console.log('After deletion', blogs);\n    state.blogs = blogs;\n    console.log('Done');\n  },\n  EDIT_POST: function EDIT_POST(state, blog) {\n    state.blogs.forEach(function (b) {\n      if (b.id === blog.id) {\n        b = blog;\n      }\n    });\n  }\n};\nvar actions = {\n  publishPage: function publishPage(_ref, blog) {\n    var commit = _ref.commit;\n    commit('PUBLISH_PAGE', blog);\n  },\n  deleteBlog: function deleteBlog(_ref2, blog) {\n    var commit = _ref2.commit;\n    console.log('Inside action');\n    commit('DELETE_BLOG', blog);\n  },\n  editPost: function editPost(_ref3, blog) {\n    var commit = _ref3.commit;\n    commit('EDIT_POST', blog);\n  }\n};\nvar getters = {\n  blogsLists: function blogsLists(state) {\n    return state.blogs;\n  },\n  blogToEdit: function blogToEdit(state) {\n    return state.blog;\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions,\n  plugins: plugins\n});","map":{"version":3,"sources":["/Users/chaitanyavivek/Desktop/jest_test5/src/store/index.js"],"names":["Vue","Vuex","createPersistedState","use","state","blogs","count","blog","plugins","mutations","PUBLISH_PAGE","push","DELETE_BLOG","id","console","log","filter","eachblog","EDIT_POST","forEach","b","actions","publishPage","commit","deleteBlog","editPost","getters","blogsLists","blogToEdit","Store"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC,C,CACA;;AACAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,IAAMG,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,KAAK,EAAE,CAFK;AAGZC,EAAAA,IAAI,EAAE;AAHM,CAAd;AAKA,IAAMC,OAAO,GAAG,CAACN,oBAAoB,EAArB,CAAhB;AACA,IAAMO,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACFN,KADE,EACKG,IADL,EACW;AACzBH,IAAAA,KAAK,CAACC,KAAN,CAAYM,IAAZ,CAAiBJ,IAAjB;AACAH,IAAAA,KAAK,CAACE,KAAN,IAAe,CAAf;AACD,GAJe;AAKhBM,EAAAA,WALgB,uBAKHR,KALG,EAKIS,EALJ,EAKQ;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAIV,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAR,IAAAA,KAAK,GAAGA,KAAK,CAACW,MAAN,CAAa,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACJ,EAAT,KAAgBA,EAApB;AAAA,KAArB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,KAA9B;AACAD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GAbe;AAchBG,EAAAA,SAdgB,qBAcLd,KAdK,EAcEG,IAdF,EAcQ;AACtBH,IAAAA,KAAK,CAACC,KAAN,CAAYc,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACvB,UAAIA,CAAC,CAACP,EAAF,KAASN,IAAI,CAACM,EAAlB,EAAsB;AAAEO,QAAAA,CAAC,GAAGb,IAAJ;AAAU;AACnC,KAFD;AAGD;AAlBe,CAAlB;AAoBA,IAAMc,OAAO,GAAG;AACdC,EAAAA,WADc,6BACSf,IADT,EACe;AAAA,QAAfgB,MAAe,QAAfA,MAAe;AAC3BA,IAAAA,MAAM,CAAC,cAAD,EAAiBhB,IAAjB,CAAN;AACD,GAHa;AAIdiB,EAAAA,UAJc,6BAIQjB,IAJR,EAIc;AAAA,QAAfgB,MAAe,SAAfA,MAAe;AAC1BT,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAQ,IAAAA,MAAM,CAAC,aAAD,EAAgBhB,IAAhB,CAAN;AACD,GAPa;AAQdkB,EAAAA,QARc,2BAQMlB,IARN,EAQY;AAAA,QAAfgB,MAAe,SAAfA,MAAe;AACxBA,IAAAA,MAAM,CAAC,WAAD,EAAchB,IAAd,CAAN;AACD;AAVa,CAAhB;AAaA,IAAMmB,OAAO,GAAG;AACdC,EAAAA,UADc,sBACFvB,KADE,EACK;AACjB,WAAOA,KAAK,CAACC,KAAb;AACD,GAHa;AAIduB,EAAAA,UAJc,sBAIFxB,KAJE,EAIK;AACjB,WAAOA,KAAK,CAACG,IAAb;AACD;AANa,CAAhB;AAQA,eAAe,IAAIN,IAAI,CAAC4B,KAAT,CAAe;AAC5BzB,EAAAA,KAAK,EAALA,KAD4B;AAE5BsB,EAAAA,OAAO,EAAPA,OAF4B;AAG5BjB,EAAAA,SAAS,EAATA,SAH4B;AAI5BY,EAAAA,OAAO,EAAPA,OAJ4B;AAK5Bb,EAAAA,OAAO,EAAPA;AAL4B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n// import axios from 'axios'\nVue.use(Vuex)\n\nconst state = {\n  blogs: [],\n  count: 1,\n  blog: {}\n}\nconst plugins = [createPersistedState()]\nconst mutations = {\n  PUBLISH_PAGE (state, blog) {\n    state.blogs.push(blog)\n    state.count += 1\n  },\n  DELETE_BLOG (state, id) {\n    console.log('Inside mutation')\n    let blogs = state.blogs\n    console.log(id)\n    blogs = blogs.filter(eachblog => eachblog.id !== id)\n    console.log('After deletion', blogs)\n    state.blogs = blogs\n    console.log('Done')\n  },\n  EDIT_POST (state, blog) {\n    state.blogs.forEach(b => {\n      if (b.id === blog.id) { b = blog }\n    })\n  }\n}\nconst actions = {\n  publishPage ({commit}, blog) {\n    commit('PUBLISH_PAGE', blog)\n  },\n  deleteBlog ({commit}, blog) {\n    console.log('Inside action')\n    commit('DELETE_BLOG', blog)\n  },\n  editPost ({commit}, blog) {\n    commit('EDIT_POST', blog)\n  }\n}\n\nconst getters = {\n  blogsLists (state) {\n    return state.blogs\n  },\n  blogToEdit (state) {\n    return state.blog\n  }\n}\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions,\n  plugins\n})\n"]},"metadata":{},"sourceType":"module"}